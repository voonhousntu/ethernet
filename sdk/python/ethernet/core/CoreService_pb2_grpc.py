# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import CoreService_pb2 as CoreService__pb2


class CoreServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UpdateBlockTsMapping = channel.unary_unary(
                '/com.vsu001.ethernet.core.CoreService/UpdateBlockTsMapping',
                request_serializer=CoreService__pb2.UpdateRequest.SerializeToString,
                response_deserializer=CoreService__pb2.UpdateResponse.FromString,
                )
        self.UpdateBlocks = channel.unary_unary(
                '/com.vsu001.ethernet.core.CoreService/UpdateBlocks',
                request_serializer=CoreService__pb2.UpdateRequest.SerializeToString,
                response_deserializer=CoreService__pb2.UpdateResponse.FromString,
                )
        self.UpdateContracts = channel.unary_unary(
                '/com.vsu001.ethernet.core.CoreService/UpdateContracts',
                request_serializer=CoreService__pb2.UpdateRequest.SerializeToString,
                response_deserializer=CoreService__pb2.UpdateResponse.FromString,
                )
        self.UpdateLogs = channel.unary_unary(
                '/com.vsu001.ethernet.core.CoreService/UpdateLogs',
                request_serializer=CoreService__pb2.UpdateRequest.SerializeToString,
                response_deserializer=CoreService__pb2.UpdateResponse.FromString,
                )
        self.UpdateTokenTransfers = channel.unary_unary(
                '/com.vsu001.ethernet.core.CoreService/UpdateTokenTransfers',
                request_serializer=CoreService__pb2.UpdateRequest.SerializeToString,
                response_deserializer=CoreService__pb2.UpdateResponse.FromString,
                )
        self.UpdateTokens = channel.unary_unary(
                '/com.vsu001.ethernet.core.CoreService/UpdateTokens',
                request_serializer=CoreService__pb2.UpdateRequest.SerializeToString,
                response_deserializer=CoreService__pb2.UpdateResponse.FromString,
                )
        self.UpdateTraces = channel.unary_unary(
                '/com.vsu001.ethernet.core.CoreService/UpdateTraces',
                request_serializer=CoreService__pb2.UpdateRequest.SerializeToString,
                response_deserializer=CoreService__pb2.UpdateResponse.FromString,
                )
        self.UpdateTransactions = channel.unary_unary(
                '/com.vsu001.ethernet.core.CoreService/UpdateTransactions',
                request_serializer=CoreService__pb2.UpdateRequest.SerializeToString,
                response_deserializer=CoreService__pb2.UpdateResponse.FromString,
                )


class CoreServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UpdateBlockTsMapping(self, request, context):
        """Update the block number and timestamp mapping in the Hive table
        The most recent block number and timestamp will be returned after the update
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBlocks(self, request, context):
        """Fetch the required blocks and push them into the `blocks` Hive table
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateContracts(self, request, context):
        """Fetch the required contracts and push them into the `contracts` Hive table
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLogs(self, request, context):
        """Fetch the required logs and push them into the `logs` Hive table
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTokenTransfers(self, request, context):
        """Fetch the required token transfers and push them into the `token_transfers` Hive table
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTokens(self, request, context):
        """Fetch the required tokens and push them into the `tokens` Hive table
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTraces(self, request, context):
        """Fetch the required traces and push them into the `traces` Hive table
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTransactions(self, request, context):
        """Fetch the required transactions and push them into the `transactions` Hive table
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CoreServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UpdateBlockTsMapping': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBlockTsMapping,
                    request_deserializer=CoreService__pb2.UpdateRequest.FromString,
                    response_serializer=CoreService__pb2.UpdateResponse.SerializeToString,
            ),
            'UpdateBlocks': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBlocks,
                    request_deserializer=CoreService__pb2.UpdateRequest.FromString,
                    response_serializer=CoreService__pb2.UpdateResponse.SerializeToString,
            ),
            'UpdateContracts': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateContracts,
                    request_deserializer=CoreService__pb2.UpdateRequest.FromString,
                    response_serializer=CoreService__pb2.UpdateResponse.SerializeToString,
            ),
            'UpdateLogs': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLogs,
                    request_deserializer=CoreService__pb2.UpdateRequest.FromString,
                    response_serializer=CoreService__pb2.UpdateResponse.SerializeToString,
            ),
            'UpdateTokenTransfers': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTokenTransfers,
                    request_deserializer=CoreService__pb2.UpdateRequest.FromString,
                    response_serializer=CoreService__pb2.UpdateResponse.SerializeToString,
            ),
            'UpdateTokens': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTokens,
                    request_deserializer=CoreService__pb2.UpdateRequest.FromString,
                    response_serializer=CoreService__pb2.UpdateResponse.SerializeToString,
            ),
            'UpdateTraces': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTraces,
                    request_deserializer=CoreService__pb2.UpdateRequest.FromString,
                    response_serializer=CoreService__pb2.UpdateResponse.SerializeToString,
            ),
            'UpdateTransactions': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTransactions,
                    request_deserializer=CoreService__pb2.UpdateRequest.FromString,
                    response_serializer=CoreService__pb2.UpdateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.vsu001.ethernet.core.CoreService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CoreService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UpdateBlockTsMapping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.vsu001.ethernet.core.CoreService/UpdateBlockTsMapping',
            CoreService__pb2.UpdateRequest.SerializeToString,
            CoreService__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBlocks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.vsu001.ethernet.core.CoreService/UpdateBlocks',
            CoreService__pb2.UpdateRequest.SerializeToString,
            CoreService__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateContracts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.vsu001.ethernet.core.CoreService/UpdateContracts',
            CoreService__pb2.UpdateRequest.SerializeToString,
            CoreService__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.vsu001.ethernet.core.CoreService/UpdateLogs',
            CoreService__pb2.UpdateRequest.SerializeToString,
            CoreService__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTokenTransfers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.vsu001.ethernet.core.CoreService/UpdateTokenTransfers',
            CoreService__pb2.UpdateRequest.SerializeToString,
            CoreService__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTokens(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.vsu001.ethernet.core.CoreService/UpdateTokens',
            CoreService__pb2.UpdateRequest.SerializeToString,
            CoreService__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTraces(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.vsu001.ethernet.core.CoreService/UpdateTraces',
            CoreService__pb2.UpdateRequest.SerializeToString,
            CoreService__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTransactions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.vsu001.ethernet.core.CoreService/UpdateTransactions',
            CoreService__pb2.UpdateRequest.SerializeToString,
            CoreService__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
